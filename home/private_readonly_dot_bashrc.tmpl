# chezmoi:template: left-delimiter={@' right-delimiter='@}
{@' includeTemplate .tmpl.msg.managedByChezmoi . | comment "# " '@}

# {{{ Generic intro

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# }}} (Generic intro)
# {{{ HISTCONTROL and other various settings

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL='ignoreboth:erasedups'

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=5000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# I just sometimes love tabs btw
tabs -4

# }}} (HISTCONTROL)
# {{{ PS1: Command line prompt configuration

# See: https://www.learnlinux.tv/10-linux-terminal-tips-and-tricks-to-enhance-your-workflow/

{@'- /* {{{ Template variables definition */'@}

{@'- /* These escape-sequences are only needed for PS1 */'@}
{@'- $escStart := `\[` '@}
{@'- $escEnd := `\]` '@}

{@'- /* Terminal color codes */'@}
{@'- /* See: https://misc.flogisoft.com/bash/tip_colors_and_formatting */'@}
{@'- $coloRed := `\033[01;31m` '@}
{@'- $coloGreen := `\033[01;32m` '@}
{@'- $coloYellow := `\033[01;33m` '@}
{@'- $coloBlue := `\033[01;34m` '@}
{@'- $coloMagenta := `\033[01;35m` '@}
{@'- $coloCyan := `\033[01;36m` '@}
{@'- $coloWhite := `\033[01;37m` '@}
{@'- $coloDefault := `\033[00m` '@}

{@'- /* Terminal color codes to be used in PS1 */'@}
{@'- $colourGreen := print $escStart $coloGreen $escEnd '@}
{@'- $colourYellow := print $escStart $coloYellow $escEnd '@}
{@'- $colourBlue := print $escStart $coloBlue $escEnd '@}
{@'- $colourMagenta := print $escStart $coloMagenta $escEnd '@}
{@'- $colourCyan := print $escStart $coloCyan $escEnd '@}
{@'- $colourWhite := print $escStart $coloWhite $escEnd '@}
{@'- $colourDefault := print $escStart $coloDefault $escEnd '@}

{@'- /* These color codes (without $escStart and $escEnd) are used in our function in printf */'@}
{@'- $lineColo := $coloGreen '@}
{@'- $bracketColo := $coloGreen '@}
{@'- $branchCleanColo := $coloBlue '@}
{@'- $branchDirtyColo := $coloRed '@}

{@'- /* These color codes (with $escStart and $escEnd) are used in PS1 directly */'@}
{@'- $lineColour := print $escStart $lineColo $escEnd '@}
{@'- $bracketColour := print $escStart $bracketColo $escEnd '@}
{@'- $clockColour := $colourBlue '@}
{@'- $jobColour := $colourBlue '@}
{@'- $pathColour := $colourBlue '@}
{@'- $distroColour := $colourCyan '@}
{@'- $usernameColour := $colourCyan '@}
{@'- $endCharacterColour := $colourGreen '@}

{@'- /* Box characters to be used in the prompt */'@}
{@'- $lineBottomCorner := `\342\224\224` '@}
{@'- $lineUpperCorner := `\342\224\214` '@}
{@'- $lineStraight := `\342\224\200` '@}

{@'- /* Special symbols */'@}
{@'- $endCharacter := `\$` '@}
{@'- $gitBranchSymbol := `î‚ ` '@}

{@'- /* }}} */'@}

# If inside a git working tree, print current git branch in the bottom line of the command prompt
function print_git_branch() {
    if git rev-parse --is-inside-work-tree 1>/dev/null 2>&1 ; then 
        local branch_colo
        # Check if there are changes in the local repo and choose color of the branch name accordingly
        # See: https://stackoverflow.com/a/5148851
        if git diff-files --quiet --ignore-submodules 1>/dev/null 2>&1 ; then
            # No changes in the repository. The repo is "clean".
            branch_colo={@' $branchCleanColo | squote '@}
        else
            # Untracked changes are present. The repo is "dirty".
            branch_colo={@' $branchDirtyColo | squote '@}
        fi
        printf {@' print `"` $bracketColo "[" "${branch_colo}" $gitBranchSymbol "$(git branch --show-current)" $bracketColo "]" $lineColo $lineStraight `"` '@}
    fi
}

PS1={@' print $lineColour $lineUpperCorner $lineStraight $lineStraight $bracketColour "[" $distroColour .chezmoi.osRelease.id $bracketColour "]" $lineColour $lineStraight $bracketColour "[" $usernameColour `\u@\h ` $pathColour `\w` $bracketColour "]" $colourDefault `\n` $lineColour $lineBottomCorner $lineStraight $lineStraight "$(print_git_branch)" $bracketColour "[" $jobColour `\j` $bracketColour "]" $lineColour $lineStraight $bracketColour "[" $clockColour `\t` $bracketColour "]" $lineColour $lineStraight $endCharacterColour $endCharacter $escStart "$(tput sgr0)" $escEnd " " | squote '@}

{@' if false -'@}
# Old variant of PS1 used to be used in Void Linux
#PS1='\[\e[01;32m\][\u@\h \[\e[01;34m\]\w\[\e[01;32m\]]\$\[\e[00m\] '
{@'- end -'@}

# If this is a graphical terminal, then set the window title to 'user@host: dir'
# The list of conditions is borrowed from Gentoo's global bash config
case "$TERM" in
    alacritty     |\
    foot*         |\
    rxvt-unicode* |\
    screen*       |\
    st-256color   |\
    tmux*         |\
    xterm*        )
        PS1="\[\e]0;\u@\h: \w\a\]$PS1"
        ;;
    *)
        ;;
esac

# }}} (PS1)
# {{{ Aliases

# {{{ Generic aliases

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    # We do not have the ~/.dircolors file
    #test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -Al'
alias l='ls -CF'

# Wrap the following commands for interactive use to avoid accidental file overwrites.
rm() { command rm -i "${@}"; }
cp() { command cp -i "${@}"; }
mv() { command mv -i "${@}"; }

# }}} (Generic aliases)
# {{{ Various handy aliases

# Quick clear screen
alias c='clear'

# Weather conditions and forecast
# "What's the forecast" alias
alias wtf='curl https://wttr.in/?M'

{@' if not .sys.isGentoo -'@}
# Coloured man pages for non-Gentoo distros
alias man="LESS_TERMCAP_mb=\$'\e[1;36m' LESS_TERMCAP_md=\$'\e[1;36m' LESS_TERMCAP_me=\$'\e[0m' LESS_TERMCAP_se=\$'\e[0m' LESS_TERMCAP_so=\$'\e[30m\e[47m' LESS_TERMCAP_me=\$'\e[0m' LESS_TERMCAP_ue=\$'\e[0m' LESS_TERMCAP_us=\$'\e[4;33m' man"

{@' end -'@}

{@' if and .sys.isDebBased (lookPath "doas") -'@}
alias doas="PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' {@' lookPath "doas" '@}"

{@' end -'@}

# }}} (Various handy aliases)
# {{{ chezmoi aliases

{@'- /* If this is not a "Brands private PC", the "--exclude=encrypted" suffix will be added to the aliases */'@}
{@'- $excludeSuffix := .sys.isBrandsPrivate | ternary "" "--exclude=encrypted" '@}

# chezmoi apply
alias Ca={@' cat .chezmoi.executable "apply" $excludeSuffix | trim | squote '@}

# chezmoi diff
alias Cd={@' cat .chezmoi.executable "diff" $excludeSuffix | trim | squote '@}

# chezmoi edit --apply
alias Ce={@' cat .chezmoi.executable "edit --apply" $excludeSuffix | trim | squote '@}

# chezmoi init
alias Ci={@' cat .chezmoi.executable "init" $excludeSuffix | trim | squote '@}

# chezmoi status
alias Cs={@' cat .chezmoi.executable "status" $excludeSuffix | trim | squote '@}

# chezmoi update
alias Cu={@' cat .chezmoi.executable "update" $excludeSuffix | trim | squote '@}

# }}} (chezmoi aliases)
# {{{ git aliases

# Git messages to be always in English no matter what locale is
alias git='LC_MESSAGES=C git'

# }}} (git aliases)
# {{{ Ansible aliases

# Disable writing byte code for python, 
# i.e. creating ``__pycache__`` subdirectories in module directories
# when running ``ansible-lint``
alias ansible-lint='/usr/bin/env PYTHONDONTWRITEBYTECODE=1 ansible-lint'

# ansible-lint alias
alias Al='/usr/bin/env PYTHONDONTWRITEBYTECODE=1 ansible-lint'

# }}} (Ansible aliases)
# {{{ Aliases for package manager. {@'- /* Supported distros only. */'@}

{@'/* {{{ Debian-based */ -'@}
{@' if .sys.isDebBased -'@}

# Show available versions of a package
alias av='aptitude versions'

# Describe why the package is installed
alias aw='aptitude why'

# Search for the packages containing a file by its name
alias f='apt-file search'

# Show the list of the files a package provides
alias fS='apt-file show'

# Install a package without recommended dependencies
alias i='{@' .cmd.sudo '@} aptitude --without-recommends install'

# Install a package with recommended dependencies
alias I='{@' .cmd.sudo '@} aptitude --with-recommends install'

{@' if or .sys.isDebian .sys.isDevuan -'@}
# Install a package from the backports repo without recommended dependencies
alias ib='{@' .cmd.sudo '@} aptitude --without-recommends -t {@' .chezmoi.osRelease.versionCodename '@}-backports install'

# Install a package from the backports repo with recommended dependencies
alias Ib='{@' .cmd.sudo '@} aptitude --with-recommends -t {@' .chezmoi.osRelease.versionCodename '@}-backports install'
{@'- end '@}

# Remove a package
alias r='{@' .cmd.sudo '@} aptitude purge'

# Search for a package
alias s='aptitude search'

# Show pakcage info
alias S='aptitude show'

# Update apt cache
alias upd='{@' .cmd.sudo '@} aptitude update'

# Update apt-file cache
alias updf='{@' .cmd.sudo '@} apt-file update'

# Upgrade the system
alias upg='{@' .cmd.sudo '@} aptitude upgrade'

{@'/* }}} */ -'@}
{@'/* {{{ Void */ -'@}
{@' else if .sys.isVoid -'@}

# Search for the packages containing a file by its name
alias f='xlocate -S && xlocate'

# Install a package
alias i='{@' .cmd.sudo '@} xbps-install -S'

# Remove a package
alias r='{@' .cmd.sudo '@} xbps-remove -R'

# Search for a package
alias s='xbps-query -Rs'

# Show package info
alias S='xbps-query -RS'

# Upgrade system
alias upg='{@' .cmd.sudo '@} xbps-install -Su'

# Upgrade the package manager
alias upgx='{@' .cmd.sudo '@} xbps-install -u xbps'

{@'/* }}} */ -'@}
{@'/* {{{ Gentoo */ -'@}
{@' else if .sys.isGentoo -'@}

alias i='{@' .cmd.sudo '@} emerge --ask --verbose'
alias s='emerge --search'
alias d='{@' .cmd.sudo '@} emerge --depclean --ask --verbose'
alias upd='{@' .cmd.sudo '@} emaint --allrepos sync'
alias upg='{@' .cmd.sudo '@} emerge --update --verbose --deep --ask --newuse --keep-going @world'

{@'/* }}} */ -'@}
{@'/* {{{ Other distros (not supported) */ -'@}
{@' else -'@}

# The distro is not supported with this config.
# ...Just use the right distro btw

{@' end -'@}
{@'/* }}} */ -'@}

# }}} (Aliases for package manager)

# }}} (Aliases)
{@'- if .sys.isDebBased '@}
# {{{ Bash-completion configuration from default Deb-based distros skel

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# }}} (Bash-completion configuration)
{@'- end '@}
# {{{ Export variables

### GPG options ###
GPG_TTY=$(tty)
export GPG_TTY

### Editor ###
EDITOR='/usr/bin/vim'
VISUAL="${EDITOR}"
export EDITOR
export VISUAL

### Firefox options ###
export MOZ_WEBRENDER=1
export MOZ_X11_EGL=1

### Graphical Gtk and Qt options ###
export QT_QPA_PLATFORMTHEME=qt5ct
# Turn off accessibility bus
export NO_AT_BRIDGE=1
# Do not hide scrollbars in Gtk applications
# See: https://bbs.archlinux.org/viewtopic.php?id=196118
# See: https://docs.gtk.org/gtk4/property.Settings.gtk-overlay-scrolling.html
export GTK_OVERLAY_SCROLLING=0

### Compressors options ###

# Zstd. See: https://wiki.gentoo.org/wiki/Zstd#Configuration
# See: https://lists.archlinux.org/pipermail/arch-dev-public/2019-March/029520.html
export STD_CLEVEL=16
export STD_NBTHREADS=0

# Xz. See https://wiki.gentoo.org/wiki/Xz-utils#Configuration
# -T0: compress and decompress with the number of cores available
# -9: use maximum compression level (but not extreme)
export XZ_DEFAULTS="-9 -T0"

{@' if not .sys.isGentoo -'@}
# Colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
{@'- end '@}

# }}} (Export variables)
