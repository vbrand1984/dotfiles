#!/usr/bin/lua
-- chezmoi:template: left-delimiter={@' right-delimiter='@}
-- vim: ft=lua

{@'/* Template which adds the lookup_icon function and initializes Gtk */ -'@}
{@'- includeTemplate .tmpl.lua.funcGtkLookupIcon . '@}

{@'/* Template which adds the process_is_running function */ -'@}
{@'- includeTemplate .tmpl.lua.funcProcessIsRunning . '@}

io.write("<openbox_pipe_menu>\n")

if process_is_running('xsettingsd') then
    io.write("<item label='Restart XSettingsD' icon='", lookup_icon(Gtk, gtk_icon_theme, 'view-refresh-symbolic', {@' .misc.obmenuIconSize '@}), [['>
    <action name='Execute'>
        <execute><command><![CDATA[{@' .cmd.manageService '@} restart xsettingsd]], ']]', [[></command></execute>
    </action>
</item>
<item label='Stop XSettingsD' icon=']], lookup_icon(Gtk, gtk_icon_theme, 'process-stop-symbolic', {@' .misc.obmenuIconSize '@}), [['>
    <action name='Execute'>
        <execute><command><![CDATA[{@' .cmd.manageService '@} stop xsettingsd]], ']]', [[></command></execute>
    </action>
</item>
]]);
else
    io.write("<item label='Start XSettingsD' icon='", lookup_icon(Gtk, gtk_icon_theme, 'system-restart-symbolic', {@' .misc.obmenuIconSize '@}), [['>
    <action name='Execute'>
        <execute><command><![CDATA[{@' .cmd.manageService '@} start xsettingsd]], ']]', [[></command></execute>
    </action>
</item>
]]);
end

io.write([[<separator />
<item label='Edit xsettingsd.conf' icon=']], lookup_icon(Gtk, gtk_icon_theme, 'edit-symbolic', {@' .misc.obmenuIconSize '@}), [['>
    <action name='Execute'>
        <execute><command><![CDATA[{@' .app.chezmoiEditorFromMenu '@} {@' joinPath .chezmoi.homeDir ".config/xsettingsd/xsettingsd.conf" | squote '@}]], ']]', [[></command></execute>
    </action>
</item>
</openbox_pipe_menu>
]]);
